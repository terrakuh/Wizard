type User {
	id: ID!
	name: String!
}

type LoginInformation {
	salt: String! # base64 encoded
	hashType: String! # sha256, sha512
}

type Lobby {
	code: String!
	mode: String!
	roundLimit: Int!
	maxRounds: Int!
	players: [User!]!
	canStart: Boolean
}

########################################
############## GAME LOGIC ##############
########################################

type PlayerState {
	player: User!
	score: Int!
	isActive: Boolean!
	tricksCalled: Int
	tricksMade: Int
}

type RoundState {
	trumpColor: String
	trumpCard: String
	round: Int!
	pastTrick: [TrickState!]
}

type PlayedCard {
	id: ID!
	player: User!
	isWinning: Boolean!
}

type TrickState {
	leadColor: String
	leadCard: PlayedCard
	round: Int
	deck: [PlayedCard!]
}

type PlayableCard {
	id: ID!
	playable: Boolean!
}

type RequiredAction {
	type: String!
	options: [String!]!
}

type GameInfo {
	roundState: RoundState
	trickState: TrickState
	playerStates: [PlayerState!]!
	hand: [PlayableCard!]
}

########################################
################# MISC #################
########################################

type Appointment {
	id: ID!
	start: String!
	end: String!
	participants: [User!]!
}

########################################
############## STATISTICS ##############
########################################

type ActionDuration {
	type: String!
	duration: Float!
}

type ResidentSleeper {
	averages: [ActionDuration!]!
}

type Query {
	# user management
	loginInformation(name: String!): LoginInformation
	user(id: ID!): User
	whoami: User

	# lobby management
	lobby: Lobby
	modes: [String!]!

	# game logic
	gameInfo: GameInfo
	gameOver: Boolean
	requiredAction: RequiredAction

	# misc
	appointments: [Appointment!]!

	# statistics
	residentSleeper: ResidentSleeper!
}

########################################
############### MUTATION ###############
########################################

type Mutation {
	# user management
	register(name: String!, passwordHash: String!, salt: String!, hashType: String!, token: String!): Boolean!
	login(name: String!, passwordHash: String!, stayLoggedIn: Boolean! = false): User
	logout: Boolean!

	# lobby management
	createLobby: String!
	setLobbySettings(mode: String, roundLimit: Int): Boolean!
	joinLobby(code: String!): Boolean!
	leaveLobby: Boolean!
	startGame: Boolean!
	endGame: Boolean!

	# game logic
	completeAction(option: String!): Boolean!

	# misc
	joinAppointment(id: ID!) Boolean!
	leaveAppointment(id: ID!) Boolean!
	createAppointment(start: String!, end: String!) Boolean!
}

schema {
	query: Query
	mutation: Mutation
}
