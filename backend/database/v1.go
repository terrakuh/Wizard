package database

import (
	"database/sql"
)

func v1(db *sql.DB) error {
	_, err := db.Exec(`

	CREATE TABLE account(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		deadline TIMESTAMP,
		name VARCHAR(255) NOT NULL UNIQUE,
		display_name VARCHAR(255) NOT NULL UNIQUE,
		hash_function VARCHAR(16) NOT NULL,
		salt BLOB NOT NULL UNIQUE,
		password BLOB NOT NULL
	);

	CREATE TABLE login(
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		last_active TIMESTAMP NOT NULL,
		token CHAR(32) NOT NULL UNIQUE,
		device_name VARCHAR(64) NOT NULL,
		account INTEGER NOT NULL REFERENCES account(id) ON DELETE CASCADE
	);

	CREATE TABLE card(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		name VARCHAR(255) NOT NULL UNIQUE
	);

	CREATE TABLE deck(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		name VARCHAR(255) NOT NULL UNIQUE
	);

	CREATE TABLE deck_card(
		deck INTEGER NOT NULL REFERENCES deck(id) ON DELETE CASCADE,
		card INTEGER NOT NULL REFERENCES card(id) ON DELETE RESTRICT
	);

	CREATE TABLE game(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		finished TIMESTAMP,
		deck INTEGER NOT NULL REFERENCES deck(id) ON DELETE RESTRICT
	);

	CREATE TABLE round(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		game INTEGER NOT NULL REFERENCES game(id) ON DELETE CASCADE,
		trump_card INTEGER REFERENCES card(id) ON DELETE RESTRICT
	);

	CREATE TABLE player(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		game INTEGER NOT NULL REFERENCES game(id) ON DELETE RESTRICT,
		account INTEGER REFERENCES account(id) ON DELETE SET NULL,
		points INTEGER NOT NULL
	);

	CREATE TABLE trick(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		round INTEGER NOT NULL REFERENCES round(id) ON DELETE CASCADE,
		winner INTEGER REFERENCES player(id) ON DELETE RESTRICT
	);

	CREATE TABLE win_condition(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		round INTEGER NOT NULL REFERENCES round(id) ON DELETE CASCADE,
		player INTEGER NOT NULL REFERENCES player(id) ON DELETE RESTRICT,
		turn_index INTEGER NOT NULL,
		amount_of_tricks INTEGER NOT NULL
	);

	CREATE TABLE played(
		id INTEGER PRIMARY KEY,
		created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
		trick INTEGER NOT NULL REFERENCES trick(id) ON DELETE CASCADE,
		card INTEGER NOT NULL REFERENCES card(id) ON DELETE RESTRICT,
		player INTEGER NOT NULL REFERENCES player(id) ON DELETE RESTRICT,
		turn_index INTEGER NOT NULL
	);

	`)
	return err
}
